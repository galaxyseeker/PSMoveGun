#include "ServerControllerView.h"
#include "PoseFilterInterface.h"
#include "DeviceInterface.h"

ServerControllerView::ServerControllerView(int device_id)
    : ServerDeviceView(device_id)
    , m_pose_filter(nullptr)
{
    // 初始化代码...
}

ServerControllerView::~ServerControllerView()
{
    if (m_pose_filter)
    {
        delete m_pose_filter;
    }
}

bool ServerControllerView::open(const DeviceEnumerator *enumerator)
{
    // 实现打开设备的代码
    return true;
}

void ServerControllerView::close()
{
    // 实现关闭设备的代码
}

CommonDevicePose ServerControllerView::getFilteredPose(float prediction_time) const
{
    CommonDevicePose pose;
    if (m_pose_filter)
    {
        // 使用姿态滤波器获取姿态
        const Eigen::Quaternionf orientation = m_pose_filter->getOrientation(prediction_time);
        const Eigen::Vector3f position_cm = m_pose_filter->getPositionCm(prediction_time);

        pose.Orientation.w = orientation.w();
        pose.Orientation.x = orientation.x();
        pose.Orientation.y = orientation.y();
        pose.Orientation.z = orientation.z();

        pose.PositionCm.x = position_cm.x();
        pose.PositionCm.y = position_cm.y();
        pose.PositionCm.z = position_cm.z();
    }
    return pose;
}

//取得控制器状态
//const CommonControllerState *ServerControllerView::getState() const
//{
    // 获取控制器状态的代码...
//    return nullptr;
//}

// 其他必要的方法实现...
